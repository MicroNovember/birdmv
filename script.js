// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
const CATEGORIES = [
    { key: 'thai', title: '‡∏´‡∏ô‡∏±‡∏á‡πÑ‡∏ó‡∏¢' },
    { key: 'korea', title: '‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ' },
    { key: 'china', title: '‡∏´‡∏ô‡∏±‡∏á‡∏à‡∏µ‡∏ô/‡∏Æ‡πà‡∏≠‡∏á‡∏Å‡∏á' },
    { key: 'inter', title: '‡∏´‡∏ô‡∏±‡∏á‡∏ù‡∏£‡∏±‡πà‡∏á/‡∏™‡∏≤‡∏Å‡∏•' },
    { key: 'cartoon', title: '‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô/‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡πà‡∏ô' },
    { key: 'india', title: '‡∏´‡∏ô‡∏±‡∏á‡∏≠‡∏¥‡∏ô‡πÄ‡∏î‡∏µ‡∏¢' },
];

const ITEMS_PER_ROW = 16; 
let allMoviesByTitle = {}; 
let originalSectionsHtml = ''; // ‡πÄ‡∏Å‡πá‡∏ö HTML ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏î‡∏¥‡∏°

// --- [ COMMON FUNCTIONS ] ---

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Movie Card HTML String (‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á 150x225)
 * ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ subtitle ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô watchUrl
 */
function createMovieCard(movie) {
    const movieFile = movie.file || movie.url;
    const movieName = movie.name || '';
    const movieSubtitle = movie.subtitle; // ‡∏î‡∏∂‡∏á URL ‡∏Ç‡∏≠‡∏á Subtitle

    // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (File ‡πÅ‡∏•‡∏∞ Name)
    let watchUrl = `watch.html?file=${encodeURIComponent(movieFile || '')}&name=${encodeURIComponent(movieName)}`;

    // 2. *** ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° Subtitle URL ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ ***
    if (movieSubtitle && movieSubtitle.trim() !== '') {
        watchUrl += `&subtitle=${encodeURIComponent(movieSubtitle)}`;
    }
    // *******************************************************

    return `
        <div class="flex-shrink-0 w-[150px] bg-gray-800 rounded-xl overflow-hidden shadow-lg hover:shadow-blue-500/30 transition duration-300 poster-card group cursor-pointer">
            <div class="relative">
                <a href="${watchUrl}">
                    <img src="${movie.logo || movie.image}"
                         onerror="this.onerror=null;this.src='https://via.placeholder.com/150x225?text=No+Image';"
                         alt="${movieName}"
                         class="w-full h-[225px] object-cover transition duration-500">
                </a>
            </div>
            <div class="p-2">
                <p class="text-sm font-semibold truncate" title="${movieName}">${movieName}</p>
                <p class="text-xs text-gray-400">${movie.info}</p>
            </div>
        </div>
    `;
}

// --- [ INDEX.HTML LOGIC ] ---

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Section ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ (Netflix Style)
 * ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ h3 ‡πÑ‡∏õ‡∏¢‡∏±‡∏á category.html
 */
function createMovieSection(title, movies, categoryKey, isSearch = false) {
    const limit = isSearch ? movies.length : ITEMS_PER_ROW;
    const limitedMovies = movies.slice(0, limit);
    // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å createMovieCard() ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
    const cardsHtml = limitedMovies.map(createMovieCard).join(''); 
    
    const categoryUrl = `category.html?cat=${categoryKey}`;
    
    return `
        <section class="mb-10">
            <a href="${categoryUrl}" class="group block mb-6">
                <h3 class="text-3xl font-bold border-l-4 border-red-600 pl-3 transition duration-300 group-hover:text-red-500">
                    ${title} 
                    <span class="text-red-600 text-xl ml-2 group-hover:ml-3 transition-all duration-300">‚Ä∫</span>
                </h3>
            </a>
            
            <div class="horizontal-scroll-container flex space-x-2 overflow-x-auto pb-4 -mx-4 px-4 sm:mx-0 sm:px-0">
                ${cardsHtml}
            </div>
        </section>
    `;
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö Netflix
 */
async function loadAllMovies() {
    const container = document.getElementById('movie-sections-container');
    const searchResultContainer = document.getElementById('search-result-container');
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    searchResultContainer.innerHTML = '';
    searchResultContainer.style.display = 'none'; 
    container.style.display = 'block';

    container.innerHTML = '<p class="text-gray-400">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...</p>';
    let allSectionsHtml = '';
    allMoviesByTitle = {};
    
    for (const category of CATEGORIES) {
        let movies = [];
        try {
            const response = await fetch(`./playlist/${category.key}.json`); 
            if (!response.ok) {
                console.warn(`Skipping category ${category.key}: File not found or failed to load.`);
                continue; 
            }
            movies = await response.json();
        } catch (error) {
            console.error(`Error loading JSON for ${category.key}:`, error);
            continue; 
        }
        
        if (movies && movies.length > 0) {
            // ‡∏™‡πà‡∏á category.key ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô createMovieSection
            allSectionsHtml += createMovieSection(category.title, movies, category.key); 
            
            movies.forEach(movie => {
                const nameKey = (movie.name || '').toLowerCase();
                if (!allMoviesByTitle[nameKey]) {
                    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                    allMoviesByTitle[nameKey] = movie; 
                }
            });
        }
    }

    if (allSectionsHtml) {
        container.innerHTML = allSectionsHtml;
        originalSectionsHtml = allSectionsHtml; // ‡πÄ‡∏Å‡πá‡∏ö HTML ‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ
    } else {
        container.innerHTML = '<p class="text-blue-500">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà. ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå JSON ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå **playlist/**</p>';
        originalSectionsHtml = '';
    }
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
function searchMovies() {
    const query = document.getElementById('search-input').value.toLowerCase();
    const container = document.getElementById('movie-sections-container');
    const searchResultContainer = document.getElementById('search-result-container');

    if (!query || query.length < 2) {
        // ‡∏ñ‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡πà‡∏≤‡∏á ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        searchResultContainer.innerHTML = '';
        searchResultContainer.style.display = 'none';
        container.style.display = 'block';
        if (originalSectionsHtml) {
             container.innerHTML = originalSectionsHtml;
        } else {
             loadAllMovies(); // ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Original HTML
        }
        return;
    }
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
    container.style.display = 'none';
    searchResultContainer.style.display = 'block';
    
    const allMoviesArray = Object.values(allMoviesByTitle);
    
    const filteredMovies = allMoviesArray.filter(movie => {
        const name = (movie.name || '').toLowerCase();
        const info = (movie.info || '').toLowerCase();
        return name.includes(query) || info.includes(query);
    });

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Section ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    if (filteredMovies.length > 0) {
        const searchTitle = `üîç ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ "${document.getElementById('search-input').value}" (${filteredMovies.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)`;
        // ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏µ‡∏¢‡πå 'search' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
        const searchSection = createMovieSection(searchTitle, filteredMovies, 'search', true);
        searchResultContainer.innerHTML = searchSection;
    } else {
        searchResultContainer.innerHTML = `<p class="text-blue-500 text-2xl mt-8">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö "${document.getElementById('search-input').value}"</p>`;
    }
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener('DOMContentLoaded', () => {
    // ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô index.html ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ã‡πâ‡∏≥‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ category.js ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô)
    if (document.title.includes('‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å')) {
        loadAllMovies(); 
    }
});
